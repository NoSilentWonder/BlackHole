#include "sprite.h"
#include "globals.h"

// CONSTRUCTOR /////////////////////////////////////////////////////////////////////////////////
cSprite::cSprite()
{
	m_x = m_y = 0;
	m_w = 1250;
	m_h = 750;
}
////////////////////////////////////////////////////////////////////////////////////////////////

// DESTRUCTOR //////////////////////////////////////////////////////////////////////////////////
cSprite::~cSprite()
{
	// Nothing to clean-up
}
////////////////////////////////////////////////////////////////////////////////////////////////

// MOVETO FUNCTION /////////////////////////////////////////////////////////////////////////////
void cSprite::MoveTo(const int x, const int y)
{
	m_x = x;
	m_y = y;
}
////////////////////////////////////////////////////////////////////////////////////////////////

// SETDIMENSIONS FUNCTION //////////////////////////////////////////////////////////////////////
void cSprite::SetDimensions(const int w, const int h)
{
	m_w = w;
	m_h = h;
}
////////////////////////////////////////////////////////////////////////////////////////////////

// SETDISPLAYBITMAP FUNCTION ///////////////////////////////////////////////////////////////////
void cSprite::SetDisplayBitmap(LPSTR szFileName)
{
	this->m_bitmap = (HBITMAP)LoadImage(NULL, szFileName, IMAGE_BITMAP, 0, 0, LR_LOADFROMFILE);
}
////////////////////////////////////////////////////////////////////////////////////////////////

// RENDER FUNCTION /////////////////////////////////////////////////////////////////////////////
void cSprite::Render(void)
{
	HBITMAP originalBitMap;
	originalBitMap = (HBITMAP)SelectObject(bitmapHDC, m_bitmap);
	BitBlt(backHDC, m_x, m_y, m_w, 
		m_h,bitmapHDC,0,0,SRCCOPY);
	SelectObject(bitmapHDC,originalBitMap); 
}
////////////////////////////////////////////////////////////////////////////////////////////////